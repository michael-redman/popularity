drop function if exists despool();
create or replace function
	despool (out _hash character(40), out _delta integer)
	returns record
	as	$TEXT$
		<<block0>>
		declare _ctid tid;
		begin	--(Sample 1 block and then randomize rows in that block. 1 block takes up 1/nblocks*100 percent of the table)
			select ctid, hash, delta into _ctid,_hash,_delta from spool tablesample system(least(ceiling(current_setting('block_size')::real/pg_relation_size('spool')*100),100)) order by random() limit 1;
			if	not found
				then	select ctid into _ctid from spool limit 1;
					if	not found
						then	_hash='Z';
							return;
							end if;
					_ctid=null;
					while _ctid is null loop
						select ctid, hash, delta into _ctid,_hash,_delta from spool tablesample system(least(ceiling(current_setting('block_size')::real/pg_relation_size('spool')*100),100)) order by random() limit 1;
						end loop;
				end if;
			delete from spool where ctid=_ctid;
			return;
		end;
		$TEXT$
	language plpgsql;
--IN GOD WE TRVST.
